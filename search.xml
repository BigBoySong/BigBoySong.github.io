<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>树莓派计划任务的配置方法</title>
      <link href="2021/02/17/%E6%A0%91%E8%8E%93%E6%B4%BE%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1%E7%9A%84%E9%85%8D%E7%BD%AE%E6%96%B9%E6%B3%95/"/>
      <url>2021/02/17/%E6%A0%91%E8%8E%93%E6%B4%BE%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1%E7%9A%84%E9%85%8D%E7%BD%AE%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p><img src="https://shumeipai.nxez.com/wp-content/uploads/2019/12/20191210220013287.png" alt="img"></p><p>Unix 系统包括树莓派的 Raspbian 有一个叫 Cron 的工具用来配置计划任务。它用来设置一些命令或脚本，定时或者间隔某一个时间运行一次。大到每天午夜备份指定目录，小到每小时记录 CPU 信息均可用它实现。</p><p>使用 <code>crontab</code> 命令来操作任务计划表，这张表是基于用户的，也就是说每个用户（包括 root 用户）都有一套自己的 <code>crontab</code>。</p><h2 id="Cron-GUI"><a href="#Cron-GUI" class="headerlink" title="Cron GUI"></a>Cron GUI</h2><p>Cron 也有一个图形界面的应用，通过下面的命令来安装：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install gnome-schedule</span><br></pre></td></tr></table></figure><p>然后就可以在树莓派菜单中找到 <strong>Scheduled Tasks</strong> 来启动它。</p><h2 id="编辑-crontab"><a href="#编辑-crontab" class="headerlink" title="编辑 crontab"></a>编辑 crontab</h2><p>下面的命令进入编辑 cron table 的操作：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">crontab -e</span><br></pre></td></tr></table></figure><h3 id="选择编辑器"><a href="#选择编辑器" class="headerlink" title="选择编辑器"></a>选择编辑器</h3><p>首次运行时会提示你选择一个编辑器，如果不知道选哪个就直接回车选择 Nano 编辑器。<br><img src="https://shumeipai.nxez.com/wp-content/uploads/2019/12/20191211195212585.png" alt="img"></p><h3 id="添加计划任务"><a href="#添加计划任务" class="headerlink" title="添加计划任务"></a>添加计划任务</h3><p>每一条计划任务为一行，由 6 个部分构成。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># m h dom mon dow  command``# * * * * * command to execute（要执行的指令）``# ┬ ┬ ┬ ┬ ┬``# │ │ │ │ │``# │ │ │ │ │``# │ │ │ │ └───── 星期 (0 - 7) (0 到 6 分别表示星期天到星期六；7 和 0 都代表星期天)``# │ │ │ └────────── 月 (1 - 12)``# │ │ └─────────────── 日 (1 - 31)``# │ └──────────────────── 小时 (0 - 23)``# └───────────────────────── 分钟 (0 - 59)</span></span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0 0 * * * &#x2F;home&#x2F;pi&#x2F;backup.sh</span><br></pre></td></tr></table></figure><p>它表示每天 0 点 0 分运行 <code>backup.sh</code> 脚本。</p><h3 id="查看计划任务"><a href="#查看计划任务" class="headerlink" title="查看计划任务"></a>查看计划任务</h3><p>使用下面的命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">crontab -l</span><br></pre></td></tr></table></figure><h3 id="在重启时运行任务"><a href="#在重启时运行任务" class="headerlink" title="在重启时运行任务"></a>在重启时运行任务</h3><p>如果需要在树莓派每次启动时都运行一条命令，可以这么做：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@reboot python &#x2F;home&#x2F;pi&#x2F;myscript.py</span><br></pre></td></tr></table></figure><p>其中使用 @reboot 替代了日期和时间。如果你希望命令仅仅在后台运行，则可以加一个 &amp; 符号：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@reboot python &#x2F;home&#x2F;pi&#x2F;myscript.py &amp;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 树莓派 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> crontab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利用树莓派进行挂机下载</title>
      <link href="2021/02/17/%E5%88%A9%E7%94%A8%E6%A0%91%E8%8E%93%E6%B4%BE%E8%BF%9B%E8%A1%8C%E6%8C%82%E6%9C%BA%E4%B8%8B%E8%BD%BD/"/>
      <url>2021/02/17/%E5%88%A9%E7%94%A8%E6%A0%91%E8%8E%93%E6%B4%BE%E8%BF%9B%E8%A1%8C%E6%8C%82%E6%9C%BA%E4%B8%8B%E8%BD%BD/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p><img src="https://shumeipai.nxez.com/wp-content/uploads/2019/09/20190916225540815.png" alt="img"></p><blockquote><p>本文转自 <a href="https://blowingdust.com/raspberry-downloader.html">Dust’s Blog</a></p></blockquote><p>一直有买 NAS 做下载姬的想法，但见过太多人买回家吃灰的例子，而且我的松鼠症并不严重，所以犹豫着。直到听闻树莓派4代发售，价格比 NAS 便宜，正好家里也有闲置 U 盘，思来想去，果然还是树莓派比较适合老子.jpg</p><h2 id="1-准备工作"><a href="#1-准备工作" class="headerlink" title="1. 准备工作"></a>1. 准备工作</h2><p>在淘宝找到相关店家，根据自己的需要选择相应套餐，因为需要预订，大概一周后到货。</p><p>树莓派到手后，先将 Raspbian 系统镜像写入 micro SD 卡，推荐使用 <a href="https://shumeipai.nxez.com/2019/04/17/write-pi-sd-card-image-using-etcher-on-windows-linux-mac.html">balenaEtcher</a>，十分方便。</p><p><img src="https://shumeipai.nxez.com/wp-content/uploads/2019/09/20190916225540286.jpg" alt="img"></p><p>之后配置远程 SSH 和 wifi（如果选择直接在树莓派上外接显示器和键盘就不用进行这一步），简单来说就是在根目录新建 SSH 文件和 wpa_supplicant.conf 文件，文件内容参考 <a href="https://shumeipai.nxez.com/2017/09/13/raspberry-pi-network-configuration-before-boot.html">教程</a> 。</p><p>配置好后，插入 SD 卡启动树莓派，在路由后台管理中找到树莓派的 IP。</p><p><img src="https://shumeipai.nxez.com/wp-content/uploads/2019/09/20190916225540440.png" alt="img"></p><p>SSH 远程登录，默认用户名 pi，默认密码 raspberry，完成。（记得修改默认密码</p><p><img src="https://shumeipai.nxez.com/wp-content/uploads/2019/09/20190916225540813.png" alt="img"></p><h2 id="2-配置"><a href="#2-配置" class="headerlink" title="2. 配置"></a>2. 配置</h2><h3 id="1-更新升级系统"><a href="#1-更新升级系统" class="headerlink" title="(1) 更新升级系统"></a>(1) 更新升级系统</h3><p>由于国内网络环境，需要修改源以免更新速度缓慢，可以 <a href="https://mirror.tuna.tsinghua.edu.cn/help/raspbian/">据此</a> 修改（感谢清华源）。</p><p>Raspbian 基于 Debian，使用 <code>apt upgrade</code> 更新升级。如遇到更新途中卡死、Ctrl+C 无法终止的情况，使用 kill 结束进程，恢复，重启，再更新。</p><h3 id="2-格式化-U-盘"><a href="#2-格式化-U-盘" class="headerlink" title="(2) 格式化 U 盘"></a>(2) 格式化 U 盘</h3><p>U 盘用于存放我们的下载文件，使用 exFAT 格式以便存储超过 4 GB 的文件。sda1 是我的 U 盘设备，请根据自己情况修改。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt &#96;&#96;install&#96; &#96;exfat-fuse&#96;&#96;# 若提示未找到 mkfs.exfat，可将 &#x2F;usr&#x2F;sbin 加入 PATH。&#96;&#96;mkfs.exfat &#96;&#96;&#x2F;dev&#x2F;sda1</span><br></pre></td></tr></table></figure><p>接着修改 /etc/fstab，让系统每次启动都自动挂载 U 盘。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># 追加写入，勿删改文件内其它内容&#96;&#96;&#x2F;dev&#x2F;sda1&#96; &#96;&#x2F;mnt&#x2F;udisk&#96; &#96;exfat rw,defaults 0 0</span><br></pre></td></tr></table></figure><p>最后使用 <code>mount -a</code> 重新载入配置，检查有无报错。</p><p>额外的，我还将 U 盘路径软链接到用户目录以方便查看。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln&#96; &#96;-s &#96;&#96;&#x2F;mnt&#x2F;udisk&#96; &#96;~&#96;&#96;&#x2F;downloads&#x2F;udisk</span><br></pre></td></tr></table></figure><h3 id="3-编译安装-qBittorrent"><a href="#3-编译安装-qBittorrent" class="headerlink" title="(3) 编译安装 qBittorrent"></a>(3) 编译安装 qBittorrent</h3><p>其实软件仓库中有 qBittorrent，但我需要的是 <a href="https://github.com/c0re100/qBittorrent-Enhanced-Edition/">qBittorrent-Enhanced-Edition</a>，可以自动封禁如迅雷吸血客户端的 IP。如果你没有这个需求，直接 <code>apt install qBittorrent</code> 即可（或者安装 qBittorrent-nox，无需 GUI）。</p><p>编译需要依赖 Boost、Qt5 等，安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt &#96;&#96;install&#96; &#96;qt5-default qttools5-dev-tools libboost1.67-all-dev libtorrent-rasterbar-dev</span><br></pre></td></tr></table></figure><p>克隆源码，在其目录执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># --disable-gui: 不需要 GUI&#96;&#96;# 如果提示无法找到 Boost，需加 --with-boost-libdir 参数&#96;&#96;.&#96;&#96;&#x2F;configure&#96; &#96;--disable-gui --with-boost-libdir&#x3D;&#96;&#96;&#x2F;usr&#x2F;lib&#x2F;arm-linux-gnueabihf&#96;&#96;make&#96; &#96;-j$(nproc)&#96;&#96;make&#96; &#96;install</span><br></pre></td></tr></table></figure><p>由于树莓派孱弱的性能，编译过程可能需要十多分钟。</p><p>之后启动 qBittorrent，浏览器远程访问，默认端口 8080，用户名 admin，密码 adminadmin。记得改密码。</p><p>配置一番后就可以开始下载了。</p><p><img src="https://shumeipai.nxez.com/wp-content/uploads/2019/09/20190916225540815.png" alt="img"></p><h3 id="4-安装-samba"><a href="#4-安装-samba" class="headerlink" title="(4) 安装 samba"></a>(4) 安装 samba</h3><p>为与 Windows 共享文件，需安装 samba，<a href="https://www.raspberrypi.org/documentation/remote-access/samba.md">官方</a> 和网上其它地方都有教程，不细述。</p><p>值得注意的是，如果你和我一样使用了软链接，还需要在 samba 配置文件加入如下内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[global]&#96;&#96;allow insecure wide links &#x3D; yes&#96; &#96;[share]&#96;&#96;follow symlinks &#x3D; yes&#96;&#96;wide links &#x3D; yes</span><br></pre></td></tr></table></figure><p><a href="https://unix.stackexchange.com/a/137192">来源</a></p><p>改好配置后，<code>systemctl restart smdb.service</code> 重启 samba。</p><h2 id="3-使用情况"><a href="#3-使用情况" class="headerlink" title="3. 使用情况"></a>3. 使用情况</h2><p>室温 30℃，风冷闲时 44℃。</p><p>下载速度没严格测试，根据已下载的情况，最高 9 MiB/s，与资源热度和网速有关，应该不是上限。没有测试内网文件传输速度。</p><p>测试 5G 大小 1080P 视频文件，可流畅播放，但如果大幅跳转有短暂卡顿。</p><p>总的来说还行吧，作为轻量下载姬，自分满足。</p><p>附：如果同时进行 BT 和 PT 下载，请分开安装。推荐使用 docker（<a href="https://blog.docker.com/2019/03/happy-pi-day-docker-raspberry-pi/">官方安装教程</a>），因为 PT 一般有客户端白名单，所以 docker 直接下载 qBittorrent 或其它官方 BT 客户端镜像即可。</p><p>注：本文并非详细的安装指南，如有未描述清楚的地方请查阅其它资料。</p>]]></content>
      
      
      <categories>
          
          <category> 树莓派 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> retropie </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用PHP上传文件到树莓派</title>
      <link href="2021/02/17/%E4%BD%BF%E7%94%A8PHP%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6%E5%88%B0%E6%A0%91%E8%8E%93%E6%B4%BE/"/>
      <url>2021/02/17/%E4%BD%BF%E7%94%A8PHP%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6%E5%88%B0%E6%A0%91%E8%8E%93%E6%B4%BE/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p><img src="https://shumeipai.nxez.com/wp-content/uploads/2015/03/20150315204719845-0.jpg" alt="20150315204719845-0"></p><p>无意间在慕课看到的一篇教程，跟着研究了下。教程使用的是PHP的 HTTP_POS 组件实现上传功能。</p><p>PS.本人是代码小白…出错的地方可能挺多…各位大大不要见怪….</p><p>说一下可能会出现的问题：</p><p>1、乱码，解决方法 请检查浏览器是否为UTF-8</p><p>2、文件上传失败，文件超过服务器设定大小！解决方法:更改PHP.ini设置中的dpload_max_filesize</p><p>3、文件上传失败，文件超过服务器表设定！解决方法：更改PHP.ini设置中的MAX_FILE_SIZE</p><p>更多问题可以参考压缩包里的 Readme.txt</p><p>正题：</p><p>首先当然得安装PHP等相关服务，参考：<a href="https://shumeipai.nxez.com/2013/10/13/install-and-config-lamp.html">在树莓派上搭建LAMP服务</a></p><p>LAMP的含义是：</p><p>Linux － 操作系统<br>Apache － 网络服务器（HTTP）软件<br>Mysql － 数据库服务<br>PHP or Perl － 编程语言</p><p>安装完PHP后就可以直接把我的包（解压后）通过SFTP上传到www目录下即可（<a href="http://pan.baidu.com/s/1sjjZYLR">百度网盘</a>）</p><p>Pi端解压后应该是这样的</p><p><img src="https://shumeipai.nxez.com/wp-content/uploads/2015/03/20150315204719214-0.jpg" alt="20150315204719214-0"></p><p>我们尝试上传一个文件（允许的文件列表在put.php中，默认设定只能上传图片否则报错）<br>电脑端访问Pi的IP弹出我们的上传页面</p><p><img src="https://shumeipai.nxez.com/wp-content/uploads/2015/03/20150315204719873-0.jpg" alt="20150315204719873-0"></p><p>此时Pi端的文件夹是空的</p><p><img src="https://shumeipai.nxez.com/wp-content/uploads/2015/03/20150315204719571-0.jpg" alt="20150315204719571-0"></p><p>我们在电脑端选择文件并点击上传</p><p><img src="https://shumeipai.nxez.com/wp-content/uploads/2015/03/20150315204719877-0.jpg" alt="20150315204719877-0"></p><p>页面提示上传成功后，Pi端的文件夹便多出了一个文件。</p><p><img src="https://shumeipai.nxez.com/wp-content/uploads/2015/03/20150315204719583-0.jpg" alt="20150315204719583-0"></p><p>附上各平台的测试(ios,安卓,windows)<br><strong>ios</strong></p><p><img src="https://shumeipai.nxez.com/wp-content/uploads/2015/03/20150315204719124-0.jpg" alt="20150315204719124-0"></p><p><img src="https://shumeipai.nxez.com/wp-content/uploads/2015/03/20150315204719845-0.jpg" alt="20150315204719845-0"></p><p><strong>安卓</strong></p><p><img src="https://shumeipai.nxez.com/wp-content/uploads/2015/03/20150315204719101-0.jpg" alt="20150315204719101-0"></p><p><img src="https://shumeipai.nxez.com/wp-content/uploads/2015/03/20150315204719239-0.jpg" alt="20150315204719239-0"></p><p><strong>windows</strong></p><p><img src="https://shumeipai.nxez.com/wp-content/uploads/2015/03/20150315204719719-0.jpg" alt="20150315204719719-0"></p><p><img src="https://shumeipai.nxez.com/wp-content/uploads/2015/03/20150315204719376-0.jpg" alt="20150315204719376-0"></p><p>上传成功enjoy!</p><p>最后：</p><p>程序下载地址：<a href="http://pan.baidu.com/s/1sjjZYLR">百度网盘</a></p>]]></content>
      
      
      <categories>
          
          <category> 树莓派 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 系统配置 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>无屏幕和键盘配置树莓派WiFi和SSH</title>
      <link href="2021/02/17/%E6%97%A0%E5%B1%8F%E5%B9%95%E5%92%8C%E9%94%AE%E7%9B%98%E9%85%8D%E7%BD%AE%E6%A0%91%E8%8E%93%E6%B4%BEWiFi%E5%92%8CSSH/"/>
      <url>2021/02/17/%E6%97%A0%E5%B1%8F%E5%B9%95%E5%92%8C%E9%94%AE%E7%9B%98%E9%85%8D%E7%BD%AE%E6%A0%91%E8%8E%93%E6%B4%BEWiFi%E5%92%8CSSH/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p><img src="https://shumeipai.nxez.com/wp-content/uploads/2017/03/20170301115718410-0.jpg" alt="树莓派 Zero W"><br>不算是什么新功能了，在树莓派3B发布后不久，树莓派官方 Raspbian 系统久加入了允许在开机前对 WiFi 网络进行配置的机制。</p><blockquote><p>注意，这个方法仅适用于全新安装树莓派系统到 SD 卡之后没有做过任何 Wi-Fi 配置的情况下有效。如果你之前配置过 Wi-Fi，再用本方法系统会默认使用已有的配置而忽略这里的配置。因此建议使用前重新安装系统。</p></blockquote><h4 id="一、WiFi-网络配置"><a href="#一、WiFi-网络配置" class="headerlink" title="一、WiFi 网络配置"></a>一、WiFi 网络配置</h4><p>用户可以在未启动树莓派的状态下单独修改 <code>/boot/wpa_supplicant.conf</code> 文件配置 WiFi 的 SSID 和密码，这样树莓派启动后会自行读取 wpa_supplicant.conf 配置文件连接 WiFi 设备。</p><p>操作方法简单：将刷好 Raspbian 系统的 SD 卡用电脑读取。在 boot 分区，也就是树莓派的 <code>/boot</code> 目录下新建 wpa_supplicant.conf 文件，按照下面的参考格式填入内容并保存 wpa_supplicant.conf 文件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">country&#x3D;CN&#96;&#96;ctrl_interface&#x3D;DIR&#x3D;&#x2F;var&#x2F;run&#x2F;wpa_supplicant GROUP&#x3D;netdev&#96;&#96;update_config&#x3D;1&#96; &#96;network&#x3D;&#123;&#96;&#96;ssid&#x3D;&quot;WiFi-A&quot;&#96;&#96;psk&#x3D;&quot;12345678&quot;&#96;&#96;key_mgmt&#x3D;WPA-PSK&#96;&#96;priority&#x3D;1&#96;&#96;&#125;&#96; &#96;network&#x3D;&#123;&#96;&#96;ssid&#x3D;&quot;WiFi-B&quot;&#96;&#96;psk&#x3D;&quot;12345678&quot;&#96;&#96;key_mgmt&#x3D;WPA-PSK&#96;&#96;priority&#x3D;2&#96;&#96;scan_ssid&#x3D;1&#96;&#96;&#125;</span><br></pre></td></tr></table></figure><p>说明以及不同安全性的 WiFi 配置示例：<br><strong>#ssid:网络的ssid</strong><br><strong>#psk:密码</strong><br><strong>#priority:连接优先级，数字越大优先级越高（不可以是负数）</strong><br><strong>#scan_ssid:连接隐藏WiFi时需要指定该值为1</strong></p><p>如果你的 WiFi 没有密码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">network&#x3D;&#123;&#96;&#96;ssid&#x3D;&quot;你的无线网络名称（ssid）&quot;&#96;&#96;key_mgmt&#x3D;NONE&#96;&#96;&#125;</span><br></pre></td></tr></table></figure><p>如果你的 WiFi 使用WEP加密</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">network&#x3D;&#123;&#96;&#96;ssid&#x3D;&quot;你的无线网络名称（ssid）&quot;&#96;&#96;key_mgmt&#x3D;NONE&#96;&#96;wep_key0&#x3D;&quot;你的wifi密码&quot;&#96;&#96;&#125;</span><br></pre></td></tr></table></figure><p>如果你的 WiFi 使用WPA/WPA2加密</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">network&#x3D;&#123;&#96;&#96;ssid&#x3D;&quot;你的无线网络名称（ssid）&quot;&#96;&#96;key_mgmt&#x3D;WPA-PSK&#96;&#96;psk&#x3D;&quot;你的wifi密码&quot;&#96;&#96;&#125;</span><br></pre></td></tr></table></figure><p>如果你不清楚 WiFi 的加密模式，可以在安卓手机上用 root explorer 打开 <code>/data/misc/wifi/wpa/wpa_supplicant.conf</code>，查看 WiFi 的信息。</p><h4 id="二、开启-SSH-服务"><a href="#二、开启-SSH-服务" class="headerlink" title="二、开启 SSH 服务"></a>二、开启 SSH 服务</h4><p>如果通过 ssh 连接树莓派出现 Access denied 这个提示则说明 ssh 服务没有开启。要手动开启的话，和 WiFi 配置相似，同样在 boot 分区新建一个文件，空白的即可，文件命名为 ssh。注意要小写且不要有任何扩展名。<br>树莓派在启动之后会在检测到这个文件之后自动启用 ssh 服务。随后即可通过登录路由器找到树莓派的 IP 地址，通过 ssh 连接到树莓派了。（<a href="https://shumeipai.nxez.com/2017/02/27/raspbian-ssh-connection-refused.html">有关开启 SSH 服务的详细方法</a>）</p><p>如果需要远程桌面方式操作树莓派，可以通过 ssh 安装 xrdp，<a href="https://shumeipai.nxez.com/2013/10/06/windows-remote-desktop-connection-raspberry-pi.html">再用 Windows 的远程桌面客户端连接到树莓派</a>。</p><p>这个小技巧对于没有有线网卡、没有标准 USB 接口来直连键鼠，但集成了 WiFi 的<a href="https://item.taobao.com/item.htm?id=557980870076">树莓派 Zero W</a> 尤其实用。</p>]]></content>
      
      
      <categories>
          
          <category> 树莓派 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 系统配置 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Pi Dashboard (Pi 仪表盘) 安装</title>
      <link href="2021/02/17/Pi%20Dashboard%20%E5%AE%89%E8%A3%85/"/>
      <url>2021/02/17/Pi%20Dashboard%20%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>Pi Dashboard (Pi 仪表盘) 是一个开源的 IoT 设备监控工具，目前主要针对树莓派平台，也尽可能兼容其他类树莓派硬件产品。你只需要在树莓派上安装好 PHP 服务器环境，即可方便的部署一个 Pi 仪表盘，通过炫酷的 WebUI 来监控树莓派的状态！</p><p>目前已加入的监测项目有：</p><ul><li>CPU 基本信息、状态和使用率等实时数据</li><li>内存、缓存、SWAP分区使用的实时数据</li><li>SD卡（磁盘）的占用情况</li><li>实时负载数据</li><li>实施进程数据</li><li>网络接口的实时数据</li><li>树莓派IP、运行时间、操作系统、HOST 等基础信息</li></ul><hr><h4 id="仪表盘预览"><a href="#仪表盘预览" class="headerlink" title="仪表盘预览"></a>仪表盘预览</h4><p><img src="https://shumeipai.nxez.com/wp-content/uploads/2017/08/20170831005933963-0.jpg" alt="img"></p><hr><h4 id="安装方法"><a href="#安装方法" class="headerlink" title="安装方法"></a>安装方法</h4><p>安装共2步，首先安装 Nginx（或 Apache）和 PHP。然后在 Nginx 目录通过 SFTP 或 GitHub 部署好本项目的程序。</p><h5 id="1-安装-Nginx-和-PHP"><a href="#1-安装-Nginx-和-PHP" class="headerlink" title="1.安装 Nginx 和 PHP"></a>1.安装 Nginx 和 PHP</h5><p>在 Pi 的终端运行以下命令。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install nginx php7.3-fpm php7.3-cli php7.3-curl php7.3-gd php7.3-cgi</span><br><span class="line">sudo service nginx start</span><br><span class="line">sudo service php7.3-fpm restart</span><br></pre></td></tr></table></figure><p>如果安装成功，可通过 <code>http://树莓派IP</code> 访问到 Nginx 的默认页。Nginx 的根目录在 <code>/var/www/html</code>。<br>进行以下操作来让 Nginx 能处理 PHP。<br><code>sudo nano /etc/nginx/sites-available/default</code></p><p>将其中的如下内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">location &#x2F; &#123;</span><br><span class="line">                # First attempt to serve request as file, then</span><br><span class="line">                # as directory, then fall back to displaying a 404.</span><br><span class="line">                try_files $uri $uri&#x2F; &#x3D;404;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>替换为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">location &#x2F; &#123;</span><br><span class="line">index  index.html index.htm index.php default.html default.htm default.php;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">location ~\.php$ &#123;</span><br><span class="line">fastcgi_pass unix:&#x2F;run&#x2F;php&#x2F;php7.3-fpm.sock;</span><br><span class="line">#fastcgi_pass 127.0.0.1:9000;</span><br><span class="line">fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;</span><br><span class="line">include fastcgi_params;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Ctrl + O 保存再 Ctrl + X 退出。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service nginx restart</span><br></pre></td></tr></table></figure><p>最后重启 Nginx 即可，以上步骤在树莓派 Zero + <code>Linux version 4.9.41+</code> 系统版本上测试通过。</p><p>对在树莓派上部署 LNMP 有兴趣可以参考这篇更详细的介绍《<a href="http://shumeipai.nxez.com/2013/08/25/install-and-config-lnmp.html">树莓派搭建LNMP环境</a>》。</p><h5 id="2-部署-Pi-Dashboard"><a href="#2-部署-Pi-Dashboard" class="headerlink" title="2.部署 Pi Dashboard"></a>2.部署 Pi Dashboard</h5><p>这里介绍两种方法将 Pi Dashboard 部署在 Nginx 上。<br><strong>2.1. SFTP 上传</strong><br>在 GitHub 下载本项目源码。<a href="http://shumeipai.nxez.com/2013/09/07/use-the-remote-sftp-file-transfer-raspberry-pi.html">通过 FileZilla 等 FTP 软件</a>将解压出来的目录上传到树莓派的 <code>/var/www/html</code> 目录下。<br>那么可以通过 <code>http://树莓派IP/pi-dashboard</code> 访问部署好了的 Pi Dashboard。</p><p>如果页面无法显示，可以尝试在树莓派终端给源码添加运行权限，例如你上传之后的路径是 <code>/var/www/html/pi-dashboard</code>，则运行。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;var&#x2F;www&#x2F;html</span><br><span class="line">sudo chown -R www-data pi-dashboard</span><br></pre></td></tr></table></figure><p><strong>2.2. GitHub 部署</strong><br>如果你了解过 GitHub 的基本操作，通过 GitHub 来下载本项目到 Pi 上会相当方便。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#如果已安装过 git 客户端可以跳过下一行</span><br><span class="line">sudo apt-get install git</span><br><span class="line">cd &#x2F;var&#x2F;www&#x2F;html</span><br><span class="line">sudo git clone https:&#x2F;&#x2F;github.com&#x2F;nxez&#x2F;pi-dashboard.git</span><br></pre></td></tr></table></figure><p>即可通过 <code>http://树莓派IP/pi-dashboard</code> 访问部署好了的 Pi Dashboard。</p><p>同样如果页面无法显示，可以尝试在树莓派终端给源码添加运行权限，例如你上传之后的路径是 <code>/var/www/html/pi-dashboard</code>，则运行。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;var&#x2F;www&#x2F;html</span><br><span class="line">sudo chown -R www-data pi-dashboard</span><br></pre></td></tr></table></figure><hr><h4 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h4><p>Q：我的树莓派安装不了PHP5／PHP7怎么办？<br>A：可以参考连接表中的文章链接，针对不同的PHP版本进行操作。</p><p>Q：Pi Dashboard 的 WebUI 支持在哪些终端上查看？<br>A：任何带有浏览器的终端都可以查看，无论是在内网还是外网的电脑、Pad或是智能手机上。Pi Dashboard 对不同的设备做了响应式布局，能很好兼容手机浏览。</p><p>Q：我没法通过外网IP访问到怎么办？<br>A：国内很多地区的ISP都不提供独立的外网IP了，可以通过花生壳等工具实现外网访问。对于已有外网独立IP的用户，可以尝试把 Nginx 服务端口从 80 改成其他端口号，再在 IP 地址后添加端口号访问。这是因为国内ISP普遍禁用了80端口。</p><p>Q：我有一个域名，如何将域名绑定到树莓派上？<br>A：可以参考<a href="http://shumeipai.nxez.com/2013/09/17/dnspod-update-dynamic-ip-resolution.html">DNSPod动态IP解析更新程序</a>和<a href="http://shumeipai.nxez.com/2013/08/25/install-and-config-lnmp.html">树莓派搭建LNMP环境</a>。将域名指向树莓派IP后需要修改 Nginx 网站配置的 servername 这项为你的域名即可。</p><p>Q：使用遇到问题可以提供技术支持吗？<br>A：可以通过 <a href="https://talk.quwj.com/">https://talk.quwj.com/</a> 发帖获得帮助。</p><hr><h4 id="使用条款"><a href="#使用条款" class="headerlink" title="使用条款"></a>使用条款</h4><p>本项目是开源项目，NXEZ.com 保留作为发起者的权利。<br>允许在 GPL v3.0 协议下对项目进行使用。请务必在保证项目的出处、声明、超链接等内容完整。</p><hr><h4 id="完善计划"><a href="#完善计划" class="headerlink" title="完善计划"></a>完善计划</h4><p>欢迎有兴趣的朋友通过 GitHub 参与到本项目的完善。下面是项目后续完善的几个方向。</p><ul><li>计划完善 Device 型号识别，需要收集各种 Device 的硬件特征。</li><li>对通用 Linux 系统做适配优惠。</li><li>不同风格 UI 的加入。</li></ul><h5 id="链接表"><a href="#链接表" class="headerlink" title="链接表"></a>链接表</h5><ul><li><a href="https://github.com/nxez/pi-dashboard">GitHub</a></li><li><a href="https://make.quwj.com/page/13">NGINX+PHP5 下的配置方法</a></li><li><a href="http://shumeipai.nxez.com/2017/08/31/pi-dashboard-released.html">NGINX+PHP5 下的配置方法，树莓派实验室</a></li><li><a href="http://shumeipai.nxez.com/2018/04/25/install-pi-dashboard-with-nginx-php7-on-pi.html">NGINX+PHP7 下的配置方法，树莓派实验室</a></li><li><a href="https://shumeipai.nxez.com/2020/03/21/install-pi-dashboard-with-nginx-php73-on-pi.html">在 Raspbian 上部署 LNMP + Pi Dashboard，PHP7.3</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 树莓派 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Pi Dashboard </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>树莓派上安装和配置 vsftpd 的教程</title>
      <link href="2021/02/17/%E6%A0%91%E8%8E%93%E6%B4%BE%E4%B8%8A%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AE%20vsftpd%20%E7%9A%84%E6%95%99%E7%A8%8B/"/>
      <url>2021/02/17/%E6%A0%91%E8%8E%93%E6%B4%BE%E4%B8%8A%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AE%20vsftpd%20%E7%9A%84%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p><img src="https://shumeipai.nxez.com/wp-content/uploads/2021/02/20210204205906879.png"></p><p>在网盘流行的当下，FTP 这种文件传输协议似乎有些「古老」。但是无论如何，FTP 方案有成熟的软件生态、完善的权限控制。你几乎无需做任何开发，只需要选择适合的软件即可创建一个文件共享服务器。可以用于工作文档的存储、分享，或者是数字产品的发布。如果你也和我一样，想在树莓派上搭建 FTP 服务器，下面以 vsftpd 为例，介绍如何安装和配置一个带完整权限控制的 FTP 服务。</p><p>对于不同用户进行不同的权限控制。考虑到服务器的安全性，所以关闭实体用户登录，使用虚拟帐号验证机制，并对不同虚拟帐号设置不同的权限。为了保证服务器的性能，还需要根据用户的等级，限制客户端的连接数及下载速度。</p><h4 id="安装-vsftpd"><a href="#安装-vsftpd" class="headerlink" title="安装 vsftpd"></a>安装 vsftpd</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install vsftpd vim db-util</span><br></pre></td></tr></table></figure><h4 id="创建用户数据库"><a href="#创建用户数据库" class="headerlink" title="创建用户数据库"></a>创建用户数据库</h4><p>1、创建用户文本文件<br>先建立用户文本文件 <code>vsftpd_virtualuser.txt</code>，添加两个虚拟帐号，公共帐号 share 及客户帐号 upload。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir &#x2F;etc&#x2F;vsftpd</span><br><span class="line">touch &#x2F;etc&#x2F;vsftpd&#x2F;vsftpd_virtualuser.txt</span><br><span class="line">vim &#x2F;etc&#x2F;vsftpd&#x2F;vsftpd_virtualuser.txt</span><br></pre></td></tr></table></figure><p>格式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">虚拟帐号 1</span><br><span class="line">密码</span><br><span class="line">虚拟帐号 2</span><br><span class="line">密码</span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">share</span><br><span class="line">123456</span><br><span class="line">upload</span><br><span class="line">456789</span><br></pre></td></tr></table></figure><p>保存退出。<br>2、生成数据库<br>保存虚拟帐号和密码的文本文件无法被系统帐号直接调用。我们需要使用 db_load 命令生成 db 数据库文件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo db_load -T -t hash -f &#x2F;etc&#x2F;vsftpd&#x2F;vsftpd_virtualuser.txt &#x2F;etc&#x2F;vsftpd&#x2F;vsftpd_virtualuser.db</span><br></pre></td></tr></table></figure><p>3、修改数据库文件访问权限<br>数据库文件中保存着虚拟帐号的密码信息，为了防止非法用户盗取，我们可以修改该文件的访问权限。生成的认证文件的权限应设置为只对 root 用户可读可写，即 600。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chmod 600 &#x2F;etc&#x2F;vsftpd&#x2F;vsftpd_virtualuser.db</span><br></pre></td></tr></table></figure><h4 id="配置-PAM-文件"><a href="#配置-PAM-文件" class="headerlink" title="配置 PAM 文件"></a>配置 PAM 文件</h4><p>为了使服务器能够使用数据库文件，对客户端进行身份验证，需要调用系统的 PAM 模块.PAM(Plugable Authentication Module)为可插拔认证模块，不必重新安装应用系统，通过修改指定的配置文件，调整对该程序的认证方式。PAM 模块配置文件路径为<code>/etc/pam.d/</code>目录，此目录下保存着大量与认证有关的配置文件，并以服务名称命名。<br>修改 vsftpd 对应的 PAM 配置文件 <code>/etc/pam.d/vsftpd</code>，将默认配置使用“#”全部注释，添加相应字段。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">auth       required     pam_userdb.so   db&#x3D;&#x2F;etc&#x2F;vsftpd&#x2F;vsftpd_virtualuser</span><br><span class="line">account    required     pam_userdb.so   db&#x3D;&#x2F;etc&#x2F;vsftpd&#x2F;vsftpd_virtualuser</span><br></pre></td></tr></table></figure><h4 id="创建虚拟帐号对应的系统用户"><a href="#创建虚拟帐号对应的系统用户" class="headerlink" title="创建虚拟帐号对应的系统用户"></a>创建虚拟帐号对应的系统用户</h4><p>对于公共帐号和客户帐号，因为需要配置不同的权限，所以可以将两个帐号的目录进行隔离，控制用户的文件访问。公共帐号 share 对应系统帐号 ftpshare，并指定其主目录为<code> /home/pi/ftp/share</code>，而客户帐号 upload 对应系统帐号 ftpupload，指定主目录为 <code>/home/pi/ftp/upload</code>。</p><p>如果不设置可执行用户登录会报不能更改目录错误。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mkdir &#x2F;home&#x2F;pi&#x2F;ftp</span><br><span class="line">mkdir &#x2F;home&#x2F;pi&#x2F;ftp&#x2F;share</span><br><span class="line">mkdir &#x2F;home&#x2F;pi&#x2F;ftp&#x2F;upload</span><br><span class="line">sudo useradd -d &#x2F;home&#x2F;pi&#x2F;ftp&#x2F;share ftpshare</span><br><span class="line">sudo useradd -d &#x2F;home&#x2F;pi&#x2F;ftp&#x2F;upload ftpupload</span><br><span class="line">sudo chmod -R 500 &#x2F;home&#x2F;pi&#x2F;ftp&#x2F;share&#x2F;</span><br><span class="line">sudo chmod -R 700 &#x2F;home&#x2F;pi&#x2F;ftp&#x2F;upload&#x2F;</span><br></pre></td></tr></table></figure><p>公共帐号 share 只允许下载，修改 share 目录其他用户权限为 rx 可读可执行。<br>客户帐号 upload 允许上传和下载，所以对 upload 目录权限设置为 rwx，可读可写可执行。</p><h4 id="建立配置文件"><a href="#建立配置文件" class="headerlink" title="建立配置文件"></a>建立配置文件</h4><p>设置多个虚拟帐号的不同权限，若使用一个配置文件无法实现此功能，需要为每个虚拟帐号建立独立的配置文件，并根据需要进行相应的设置。<br>1、修改 vsftpd.conf 主配置文件<br>配置主配置文件 /etc/vsftpd.conf 添加虚拟帐号的共同设置并添加 user_config_dir 字段，定义虚拟帐号的配置文件目录。<br>禁用匿名用户登录并启用本地用户登录设置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">anonymous_enable&#x3D;NO</span><br><span class="line">local_enable&#x3D;YES</span><br><span class="line"># 将所有本地用户限制在家目录中，NO 则不限制</span><br><span class="line">chroot_local_user&#x3D;YES</span><br><span class="line"># 配置 vsftpd 使用的 PAM 模块为 vsftpd</span><br><span class="line">pam_service_name&#x3D;vsftpd</span><br><span class="line"># 设置虚拟帐号的主目录为&#x2F;vuserconfig</span><br><span class="line">user_config_dir&#x3D;&#x2F;etc&#x2F;vsftpd&#x2F;vuserconfig</span><br><span class="line"># 设置 FTP 服务器最大接入客户端数为 300 个</span><br><span class="line">max_clients&#x3D;300</span><br><span class="line"># 设置每个 IP 地址最大连接数为 10 个</span><br><span class="line">max_per_ip&#x3D;10</span><br><span class="line">allow_writeable_chroot&#x3D;YES</span><br><span class="line">pasv_enable&#x3D;YES</span><br><span class="line">pasv_min_port&#x3D;10000</span><br><span class="line">pasv_max_port&#x3D;20000</span><br></pre></td></tr></table></figure><p>2、建立虚拟帐号配置文件<br>在 user_config_dir 指定路径下，建立与虚拟帐号同名的配置文件并添加相应的配置字段。<br>首先建立公共帐号 share 的配置文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir &#x2F;etc&#x2F;vsftpd&#x2F;vuserconfig</span><br><span class="line">sudo vi &#x2F;etc&#x2F;vsftpd&#x2F;vuserconfig&#x2F;share</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 开启虚拟帐号登录</span><br><span class="line">guest_enable&#x3D;yes</span><br><span class="line"># 设置 ftp 对应的系统帐号为 ftpshare</span><br><span class="line">guest_username&#x3D;ftpshare</span><br><span class="line"># 允许匿名用户浏览器整个服务器的文件系统</span><br><span class="line">anon_world_readable_only&#x3D;no</span><br><span class="line"># 限定传输速率为 500KB&#x2F;s</span><br><span class="line">anon_max_rate&#x3D;500000</span><br></pre></td></tr></table></figure><p>注意：<br>vsftpd 对于文件传输速度限制并不是绝对锁定在一个数值上哈，而是在 80%<del>120%之间变化。比如设置 100KB/s ，则实际是速度在 80KB/s</del>120KB/s 之间变化。</p><p>下面是客户帐号的配置文件 upload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo vi &#x2F;etc&#x2F;vsftpd&#x2F;vuserconfig&#x2F;upload</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"># 开启虚拟帐号登录</span><br><span class="line">guest_enable&#x3D;yes</span><br><span class="line"># 设置 ftp 对应的系统帐号为 ftpupload</span><br><span class="line">guest_username&#x3D;ftpupload</span><br><span class="line"># 允许匿名用户浏览器整个服务器的文件系统</span><br><span class="line">anon_world_readable_only&#x3D;no</span><br><span class="line"># 允许在文件系统写入权限</span><br><span class="line">write_enable&#x3D;yes</span><br><span class="line"># 允许创建文件夹</span><br><span class="line">anon_mkdir_write_enable&#x3D;yes</span><br><span class="line"># 开启匿名帐号的上传功能</span><br><span class="line">anon_upload_enable&#x3D;yes</span><br><span class="line"># 限定传输速度为 1000KB&#x2F;s</span><br><span class="line">anon_max_rate&#x3D;1000000</span><br><span class="line">如果需要删除权限，可在配置中添加：</span><br><span class="line">anon_other_write_enable&#x3D;YES</span><br></pre></td></tr></table></figure><h4 id="重启-vsftpd-使配置生效"><a href="#重启-vsftpd-使配置生效" class="headerlink" title="重启 vsftpd 使配置生效"></a>重启 vsftpd 使配置生效</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart vsftpd</span><br><span class="line">sudo service vsftpd restart</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 树莓派 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> retropie </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>制作树莓派的游戏机系统</title>
      <link href="2021/02/14/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%88%B6%E4%BD%9C%E6%B8%B8%E6%88%8F%E6%9C%BA/"/>
      <url>2021/02/14/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%88%B6%E4%BD%9C%E6%B8%B8%E6%88%8F%E6%9C%BA/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="树莓派的游戏机系统（retropie）"><a href="#树莓派的游戏机系统（retropie）" class="headerlink" title="树莓派的游戏机系统（retropie）"></a>树莓派的游戏机系统（retropie）</h1><p><a href="https://retropie.org.uk/docs/">完整配置文档</a></p><blockquote><p>此处记录的是个人一些配置方法</p></blockquote><h2 id="初始化配置"><a href="#初始化配置" class="headerlink" title="初始化配置"></a>初始化配置</h2><h4 id="1-连接到Wifi"><a href="#1-连接到Wifi" class="headerlink" title="1.连接到Wifi"></a>1.连接到Wifi</h4><p><em>如果您想连接到wifi而不需要额外的键盘，则可以将文件添加到名为sd卡的引导分区中 <code>/boot/wpa_supplicant.conf</code>文件中</em></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">country&#x3D;CN</span><br><span class="line">ctrl_interface&#x3D;DIR&#x3D;&#x2F;var&#x2F;run&#x2F;wpa_supplicant GROUP&#x3D;netdev</span><br><span class="line">update_config&#x3D;1</span><br><span class="line">network&#x3D;&#123;</span><br><span class="line">ssid&#x3D;&quot;songnan&quot;</span><br><span class="line">psk&#x3D;&quot;songnan7758526nan&quot;</span><br><span class="line">key_mgmt&#x3D;WPA-PSK</span><br><span class="line">priority&#x3D;1</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-启用SSH"><a href="#2-启用SSH" class="headerlink" title="2. 启用SSH"></a>2. 启用SSH</h4><p><em>如果您想启用而不需要额外的键盘，则可以将文件添加到名为sd卡的引导分区中 <code>/boot/ssh</code>文件中</em></p><h4 id="3-网络挂载游戏ROMS"><a href="#3-网络挂载游戏ROMS" class="headerlink" title="3. 网络挂载游戏ROMS"></a>3. 网络挂载游戏ROMS</h4><blockquote><p>网络设备配置Samba服务不在本文讲解范围内！</p></blockquote><p><em>终端连接树莓派输入<code>sudo nano /opt/retropie/configs/all/autostart.sh</code>并输入以下内容并保存</em></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mount -t cifs -o username&#x3D;something,password&#x3D;something,nounix,noserverino &#x2F;&#x2F;REMOTEHOST&#x2F;path&#x2F;to&#x2F;roms &#x2F;home&#x2F;pi&#x2F;RetroPie&#x2F;roms</span><br></pre></td></tr></table></figure><blockquote><p>something字段为用户个人配置</p></blockquote><h4 id="4-游戏创建-gamelist"><a href="#4-游戏创建-gamelist" class="headerlink" title="4. 游戏创建 gamelist"></a>4. 游戏创建 gamelist</h4><blockquote><p>正常情况刮板即可满足要求，本文介绍的是中文目录</p></blockquote><ul><li><h5 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h5>编辑<code>/opt/retropie/configs/all/retroarch.cfg</code>添加如下代码<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">input_screenshot_btn &#x3D; &quot;*&quot;</span><br></pre></td></tr></table></figure><blockquote><p>*为自定义按键 可终端使用<code>jstest /dev/input/js0</code>命令并按下手柄按钮确定键值</p></blockquote></li></ul><p> <strong><em>本人自动全局设置截图脚本</em></strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">#! &#x2F;bin&#x2F;sh</span><br><span class="line">mkdir &quot;&#x2F;home&#x2F;pi&#x2F;RetroPie&#x2F;screenshots&quot;</span><br><span class="line">chmod 777 -R &quot;&#x2F;home&#x2F;pi&#x2F;RetroPie&#x2F;screenshots&quot;</span><br><span class="line">cp &quot;runcommand-onend.sh&quot; &quot;&#x2F;opt&#x2F;retropie&#x2F;configs&#x2F;all&#x2F;runcommand-onend.sh&quot;</span><br><span class="line">path&#x3D;&#39;&#x2F;opt&#x2F;retropie&#x2F;configs&#x2F;&#39;</span><br><span class="line">dir&#x3D;$(ls -l $path |awk &#39;&#x2F;^d&#x2F; &#123;print $NF&#125;&#39;)</span><br><span class="line">for file_path in $dir</span><br><span class="line">do</span><br><span class="line"> echo $file_path</span><br><span class="line"> mkdir &quot;&#x2F;home&#x2F;pi&#x2F;RetroPie&#x2F;screenshots&#x2F;$&#123;file_path&#125;&quot;</span><br><span class="line"> chmod 777 -R &quot;&#x2F;home&#x2F;pi&#x2F;RetroPie&#x2F;screenshots&#x2F;$&#123;file_path&#125;&quot;</span><br><span class="line"> echo &quot;auto_screenshot_filename &#x3D; \&quot;false\&quot;&quot;&gt;&gt;&quot;$&#123;path&#125;&#x2F;$&#123;file_path&#125;&#x2F;retroarch.cfg&quot;</span><br><span class="line"> echo &quot;screenshot_directory &#x3D; \&quot;&#x2F;home&#x2F;pi&#x2F;RetroPie&#x2F;screenshots&#x2F;$&#123;file_path&#125;\&quot;&quot;&gt;&gt;&quot;$&#123;path&#125;&#x2F;$&#123;file_path&#125;&#x2F;retroarch.cfg&quot;</span><br><span class="line"> echo &#39;input_screenshot_btn &#x3D; &quot;2&quot;&#39;&gt;&gt;&quot;$&#123;path&#125;&#x2F;$&#123;file_path&#125;&#x2F;retroarch.cfg&quot;</span><br><span class="line">done </span><br></pre></td></tr></table></figure><ul><li><h5 id="全局配置（简便方法）"><a href="#全局配置（简便方法）" class="headerlink" title="全局配置（简便方法）"></a>全局配置（简便方法）</h5>编辑您的<code>/opt/retropie/configs/all/retroarch.cfg</code>并放置选项<code>auto_screenshot_filename = &quot;false&quot;</code>。该选项在默认情况下不存在retroarch.cfg，因此将其放在文件的开头是个好主意（以后可以轻松编辑）。<br>然后在选项中添加另一行<code>screenshot_directory = &quot;/path/to/screenshots&quot;</code>（我使用<code>/home/pi/screenshots</code>，但是您可以设置任何其他有效路径）。请记住：该目录必须存在，否则RetroArch将无法保存屏幕截图。<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">auto_screenshot_filename &#x3D; &quot;false&quot;</span><br><span class="line">screenshot_directory &#x3D; &quot;&#x2F;some&#x2F;path&#x2F;to&#x2F;screenshots&quot;</span><br></pre></td></tr></table></figure></li><li><h5 id="单独配置每个模拟器"><a href="#单独配置每个模拟器" class="headerlink" title="单独配置每个模拟器"></a>单独配置每个模拟器</h5>如果您对全局配置感到满意，则可以跳至下一部分。如果要特定于系统的自定义，请继续阅读。<br>编辑您的<code>/opt/retropie/configs/SYSTEM_NAME/retroarch.cfg</code>（用明显的名称替换SYSTEM_NAME），然后像上面的全局配置一样对其进行配置。<br>系统特定的配置优先于全局配置。因此，如果要为特定系统显式打开/关闭此功能，可以分别设置<code>auto_screenshot_filename</code>为<code>false</code>或<code>true</code>。请注意，您必须显式设置它以true关闭特定系统的抓取屏幕截图。如果不存在，脚本将在global中寻找该配置retroarch.cfg。<br>如果要使用系统特定的文件夹来截屏，请screenshot_directory在系统特定中设置选项retroarch.cfg。如果不存在，脚本将在全局文件中查找该配置。<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">auto_screenshot_filename &#x3D; &quot;false&quot;</span><br><span class="line">screenshot_directory &#x3D; &quot;&#x2F;some&#x2F;path&#x2F;to&#x2F;screenshots&quot;</span><br></pre></td></tr></table></figure>最后在命令行中键入：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;meleu&#x2F;share&#x2F;master&#x2F;screeper.sh</span><br><span class="line">mv screeper.sh &#x2F;opt&#x2F;retropie&#x2F;configs&#x2F;all&#x2F;runcommand-onend.sh</span><br></pre></td></tr></table></figure><code>screeper.sh </code>下载连接：<a href="https://gitee.com/songnan05/my_geme/blob/main/runcommand-onend.sh">下载文件</a></li></ul><h4 id="5-中英文游戏对照表"><a href="#5-中英文游戏对照表" class="headerlink" title="5. 中英文游戏对照表"></a>5. 中英文游戏对照表</h4><p><a href="http://songnan05.gitee.io/my_geme/">我的游戏信息库</a></p>]]></content>
      
      
      <categories>
          
          <category> 树莓派 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> retropie </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
